
    # มี 2 เทคนิคที่ใช้ในการวัดความเร็วของอัลกอริทึม
        > Time Complexity
            - คือ ระยะเวลาที่อัลกอริทึมใช้ในการดำเนินการ
        > Space Complexity
            - คือ หน่วยความจำที่อัลกอริทึมใช้ในการดำเนินการ

    # ตัวอย่างที่ดีที่สุดของการคิดค้นอัลกอริทึมคือการ searching และ sorting

    # ขนาดของ input มีความสำคัญอย่างมากในการทำงานของ algorithm

    # วิธีการวิเคราะห์อัลกอริทึม
    โดยจะมี 2 วิธีในการวิเคราะห์อัลกอริทึมสำหรับประสิทธิภาพตามเวลาหรือเวลาทำงาน
        > Experimental Analysis
            - เป็นการวัดประสิทธิภาพ ด้วยการบันทึกเวลาในการทำงานของอัลกอริทึมบนอินพุทต่าง ๆ
            - ภาษาโปรแกรมมิ่งระดับสูงส่วนใหญ่จะมีฟังก์ชันเกียวกับเวลามาให้
            - Lapse time สามารถคำนวณได้ตั้งแต่ต้นจนถึงสินสุดของอัลกอริทึม
            > ข้อดี คือ
                - ง่ายต่อการวิเคราะห์และวัดผล
            > ข้อเสีย คือ
                - มีข้อจำกัดของ input ที่จะใช้ทดสอบอัลกอริทึม
                - ขึ้นอยู่กับ Hardware เช่น CPU, Memory
                - ขึ้นอยู่กับ Software เช่น Complier, Interpeter
                - ขึ้นอยู่กับ ระบบปัฏิบัติการ
        > Thoretcal Analysis
            - เป็นการวิเคราะห์โดยตรงกับคำอธิบายของอัลกอริทึมหรือการดำเนินการ
            - คำนึงถึงปัจจัยที่เป็นไปได้ทั้งหมดของ input
            > ข้อดี
                - ไม่ขึ้อยู่กับ Hardware
                - ไม่ขึ้อยู่กับ Software

    # ลำดับค่าใช้จ่ายสำหรับทรัพยากรณ์ในการ Execute program
        (การดำเนินการดั้งเดิมที่ใช้เวลาคงที่ในการดำเนินการ)
        > Declarations
        > Assignment
        > Arithmetic operations
        > Comparison statements
        > Accessing elements
        > Calling functions
        > Returning functions

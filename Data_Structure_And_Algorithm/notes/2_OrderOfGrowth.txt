
    ### Algorithm Order of Growth
    ลำดับการเติบโตของอัลกอริทึม

    Table
    Constant        -> 1
    Logarithm       -> log(n)
    Linear          -> n
    n-log-n         -> n log(n)
    Quadratic       -> n^2  (ตั้งแต่ตัวนี้เป็นต้นไป ไม่ควรใช้)
    Cubic           -> n^3
    Exponential     -> 2^n

    # ตัวอย่าง 
    - อัลกอริทึมที่ไม่มีการ loop จะเป็น Constant
        int i = 0;
        int j = n;
        total = i + j;
        int mid = (i + j) / 2;

    - มีการวนซ้ำและถูกแบ่งออกครึ่งหนึ่งทุกครั้ง จะเป็น Logarithm
        int i = 0;
        int j = n;
        while (i < j)
        {
            int mid = (i + j) / 2;
            if (A[mid] == key)
            {
                return 1;
            }
            else if (key < A[mid])
            {
                j = mid - 1;
            }
            else if (key > A[mid])
            {
                i = mid + 1;
            }
        }
    
    - มีการวนซ้ำอย่างง่าย การเติบโตจะเป็นแบบ Linear
        int total = 0;
        int i = 1;
        while (i <= n) 
        {
            total += i;
            i = i + 1;
        }

    - ถ้ามี loop ซ้อน loop จะเป็น Quadratic
        int total = 0;
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                total += A[i][j];
            }
        }
    
    (ถ้าหากมี 2 loop แต่ไม่ได้ซ้อนกัน จะเป็น Linear)